
@model Odontologia.Models.OrdenPedido

@{
    ViewBag.Title = "Confirmar";
    var cant = ViewBag.Cantidad;
    int idOrden = ViewBag.IdOrden;
    var idOr = ViewBag.IdProducto2;
    var idp = ViewBag.IdProd;
    var idEmp = ViewBag.IdEmp;
}

<h2>Edit</h2>

@using (Html.BeginForm())
{   
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>OrdenPedido</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Cantidad, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Cantidad, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Cantidad, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IdProducto, "IdProducto", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("IdProducto", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.IdProducto, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
        @Html.LabelFor(model => model.IdEmpleado, "IdEmpleado", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("IdEmpleado", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.IdEmplea  do, "", new { @class = "text-danger" })
        </div>
    </div>*@

    @*<div class="form-group">
        @Html.LabelFor(model => model.IdProveedor, "IdProveedor", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("IdProveedor", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.IdProveedor, "", new { @class = "text-danger" })
        </div>
    </div>*@

    <div class="md-form">
        <input type="text" id=" model.IdEmpleado" name="IdEmpleado" class="form-control" value="@idEmp" onchange="Enviar()">
        <label for="form1">@idEmp</label>
    </div>
    <div class="md-form">
        <input type="text" id="Codigo" name="Codigo" class="form-control" value="@cant" onchange="Enviar()">
        <label for="form1">@cant</label>
    </div>
    <div class="md-form">
        <input type="text" id="model.IdProveedor" name="IdProveedor" class="form-control" value="@ViewBag.IdProveedor2" onchange="Enviar()">
        <label for="form1">@ViewBag.IdProveedor2</label>
    </div>
    <div class="md-form">
        <input type="text" id="IdOrde" name="IdOrde" class="form-control" value="@idOr" onchange="Enviar()">
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
    <button id="EnviarRecepcion" onclick="actualizar()">
        Recepcionar Producto
    </button>
</div>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


<script type="text/javascript">
    debugger;
    var text = document.getElementById("Codigo").value;
    var text = document.getElementById("Id").value;
    debugger;

    function Enviar() {
        debugger;
        var text = document.getElementById("Cantidad");
        text.value;
        document.getElementById("#Codigo").value = text;

    }

    function actualizar() {
        debugger;   
        var can = document.getElementById("Codigo").value;
        var idOrden = document.getElementById("IdOrde").value;
        debugger;
        var serviceURL = '/Productoes/Create2'; 

        $.ajax({  
            data: {
                can: $("#Codigo").val(),
                idOrden: $("#IdOrde").val(),
            },
            url: serviceURL,
            type: "POST",
        });
    }
 
</script>