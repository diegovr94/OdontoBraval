@model Odontologia.Models.Familia

@{
    ViewBag.Title = "Create";
}


@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

@*<h2>Create</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>RecepcionProducto</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                <label class="control-label col-md-2" for="form1">Cantidad </label>
                <div class="col-md-10">
                    <input type="number" id="model.Cantidad" name="Cantidad" class="form-control" value="@ViewBag.Cantidad">
                </div>


            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.IdProducto, "Codigo de Producto", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("IdProducto", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IdProducto, "", new { @class = "text-danger" })
                </div>
            </div>

            <div>
                <div class="md-form" style="display:none">

                    <input required type="number" id="model.IdEmpleado" name="IdEmpleado" value="@idEmp" class="form-control">

                </div>
            </div>
            <div>
                <div class="md-form" style="display:none">
                    <input required type="number" id="model.IdProveedor" name="IdProveedor" value="@idProv" class="form-control">

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Estado, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@








<style>
    .msg-none {
        display: none !important;
    }

    .msg-block {
        display: block !important;
    }

    body {
        padding-top: 0px !important;
        padding-bottom: 0px !important;
    }

    .body-content {
        padding-left: 0px !important;
        padding-right: 0px !important;
        height: calc(100vh) !important;
        background: rgba(179,220,237,1);
        background: -moz-linear-gradient(top, rgba(179,220,237,1) 0%, rgba(69,191,231,1) 20%, rgba(41,184,229,1) 25%, rgba(34,92,186,1) 67%, rgba(28,19,153,1) 100%);
        background: -webkit-gradient(left top, left bottom, color-stop(0%, rgba(179,220,237,1)), color-stop(20%, rgba(69,191,231,1)), color-stop(25%, rgba(41,184,229,1)), color-stop(67%, rgba(34,92,186,1)), color-stop(100%, rgba(28,19,153,1)));
        background: -webkit-linear-gradient(top, rgba(179,220,237,1) 0%, rgba(69,191,231,1) 20%, rgba(41,184,229,1) 25%, rgba(34,92,186,1) 67%, rgba(28,19,153,1) 100%);
        background: -o-linear-gradient(top, rgba(179,220,237,1) 0%, rgba(69,191,231,1) 20%, rgba(41,184,229,1) 25%, rgba(34,92,186,1) 67%, rgba(28,19,153,1) 100%);
        background: -ms-linear-gradient(top, rgba(179,220,237,1) 0%, rgba(69,191,231,1) 20%, rgba(41,184,229,1) 25%, rgba(34,92,186,1) 67%, rgba(28,19,153,1) 100%);
        background: linear-gradient(to bottom, rgba(179,220,237,1) 0%, rgba(69,191,231,1) 20%, rgba(41,184,229,1) 25%, rgba(34,92,186,1) 67%, rgba(28,19,153,1) 100%);
        filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#b3dced', endColorstr='#1c1399', GradientType=0 );
    }

    .myButton {
        box-shadow: 3px 4px 0px 0px #91b8b3;
        background: linear-gradient(to bottom, #768d87 5%, #6c7c7c 100%);
        background-color: #768d87;
        border-radius: 15px;
        border: 1px solid #566963;
        display: inline-block;
        cursor: pointer;
        color: #ffffff;
        font-family: Arial;
        font-size: 17px;
        padding: 7px 25px;
        text-decoration: none;
        text-shadow: 0px 1px 0px #2b665e;
    }

        .myButton:hover {
            background: linear-gradient(to bottom, #6c7c7c 5%, #768d87 100%);
            background-color: #6c7c7c;
        }

        .myButton:active {
            position: relative;
            top: 1px;
        }



        .myButton:active {
            position: relative;
            top: 1px;
        }

    label {
        color: white !important
    }
</style>

<div class="container-fluid">
    <div class="row" style="    padding-top: 50px;    padding-left: 40px;    padding-right: 40px;">
        <div class="row">
            <div class="col-lg-2 text-center">
                <a href="@Url.Action("Dashboard", "Administrador")"> <i class="glyphicon glyphicon-hand-left" style="font-size: 35px;     margin-top: 20px; margin-right:10px"></i>    Volver</a>

            </div>
            <div class="col-lg-8">
                <h1 class="text-center" style="   margin-bottom: 50px; color:white">Registrar Familia</h1>
            </div>


        </div>


        <div class="col-lg-12">
            <div class="row">
                <div class="col-lg-6">


                    <label>Todos los campos con * son obligatorios</label>


                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.codigo,"Codigo *", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.codigo, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.codigo, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Descripcion, "Descripción *", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Tipo, "Tipo *", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Tipo, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Tipo, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Crear" class="btn btn-default" />
                                </div>
                            </div>
                        </div>
                    }


                </div>
                <div class="col-lg-6" style="    background-color: white;    padding: 10px;    border-radius: 20px;">
                    <img src="~/Content/Img/imgInicio.jpg" style="height: 400px;    border-radius: 20px;" />
                </div>
            </div>

        </div>


        <div class="col-lg-3 px-0 my-4" style="margin: 0px 70px;">
            @if (!string.IsNullOrEmpty(ViewBag.Message))
            {
                <div class="alert alert-danger">@ViewBag.Message</div>
            }

        </div>


    </div>

</div>