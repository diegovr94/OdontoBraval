


@model Odontologia.Models.Producto

@{
    ViewBag.Title = "Edit";
    var can = ViewBag.can;
}

<script>
    debugger;
    var text = document.getElementById("Codigo").value;
    var text = document.getElementById("Id").value;
    debugger;
</script>








<style>
    .msg-none {
        display: none !important;
    }

    .msg-block {
        display: block !important;
    }

    body {
        padding-top: 0px !important;
        padding-bottom: 0px !important;
    }

    .body-content {
        padding-left: 0px !important;
        padding-right: 0px !important;
        height: calc(100vh) !important;
        background: rgba(179,220,237,1);
        background: -moz-linear-gradient(top, rgba(179,220,237,1) 0%, rgba(69,191,231,1) 20%, rgba(41,184,229,1) 25%, rgba(34,92,186,1) 67%, rgba(28,19,153,1) 100%);
        background: -webkit-gradient(left top, left bottom, color-stop(0%, rgba(179,220,237,1)), color-stop(20%, rgba(69,191,231,1)), color-stop(25%, rgba(41,184,229,1)), color-stop(67%, rgba(34,92,186,1)), color-stop(100%, rgba(28,19,153,1)));
        background: -webkit-linear-gradient(top, rgba(179,220,237,1) 0%, rgba(69,191,231,1) 20%, rgba(41,184,229,1) 25%, rgba(34,92,186,1) 67%, rgba(28,19,153,1) 100%);
        background: -o-linear-gradient(top, rgba(179,220,237,1) 0%, rgba(69,191,231,1) 20%, rgba(41,184,229,1) 25%, rgba(34,92,186,1) 67%, rgba(28,19,153,1) 100%);
        background: -ms-linear-gradient(top, rgba(179,220,237,1) 0%, rgba(69,191,231,1) 20%, rgba(41,184,229,1) 25%, rgba(34,92,186,1) 67%, rgba(28,19,153,1) 100%);
        background: linear-gradient(to bottom, rgba(179,220,237,1) 0%, rgba(69,191,231,1) 20%, rgba(41,184,229,1) 25%, rgba(34,92,186,1) 67%, rgba(28,19,153,1) 100%);
        filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#b3dced', endColorstr='#1c1399', GradientType=0 );
    }

    .myButton {
        box-shadow: 3px 4px 0px 0px #91b8b3;
        background: linear-gradient(to bottom, #768d87 5%, #6c7c7c 100%);
        background-color: #768d87;
        border-radius: 15px;
        border: 1px solid #566963;
        display: inline-block;
        cursor: pointer;
        color: #ffffff;
        font-family: Arial;
        font-size: 17px;
        padding: 7px 25px;
        text-decoration: none;
        text-shadow: 0px 1px 0px #2b665e;
    }

        .myButton:hover {
            background: linear-gradient(to bottom, #6c7c7c 5%, #768d87 100%);
            background-color: #6c7c7c;
        }

        .myButton:active {
            position: relative;
            top: 1px;
        }



        .myButton:active {
            position: relative;
            top: 1px;
        }

    label {
        color: white !important
    }
</style>

<div class="container-fluid">
    <div class="row" style="    padding-top: 50px;    padding-left: 40px;    padding-right: 40px;">
        <h1 class="text-center" style="   margin-bottom: 40px; color:white">Producto</h1>


        <div class="col-lg-12">
            <div class="row">
                <div class="col-lg-6">




                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                           
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.Id)

                            <div class="form-group">
                                @Html.LabelFor(model => model.Codigo, "Codigo  del Producto", htmlAttributes: new { @class = "control -label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Codigo, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Codigo, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.FechaVencimiento, "Fecha Vencimiento", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.FechaVencimiento, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.FechaVencimiento, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group" style="display:none">
                                @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group" style="display:none">
                                @Html.LabelFor(model => model.PrecioCompra, "Precio de Compra", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.PrecioCompra, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PrecioCompra, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group" style="display:none">
                                @Html.LabelFor(model => model.PrecioVenta, "Precio de Venta", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.PrecioVenta, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PrecioVenta, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Stock, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @*@Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })*@


                                    <div>
                                        <div class="md-form">
                                            <input type="number" id="model.Stock" name="Stock" value="@can" class="form-control">
                                        </div>  
                                    </div>
                                </div>
                            </div>

                            <div class="form-group" style="display:none">
                                @Html.LabelFor(model => model.StockCritico, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.StockCritico, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.StockCritico, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.IdProveedor, "Proveedor", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("IdProveedor", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.IdProveedor, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.IdFamilia, "Familia del Producto", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("IdFamilia", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.IdFamilia, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Confirmar" class="btn btn-default" />
                                </div>
                            </div>
                        </div>
                    }



                </div>
                <div class="col-lg-6" style="    background-color: white;    padding: 10px;    border-radius: 20px;">
                    <img src="~/Content/Img/imgInicio.jpg" style="height: 400px;    border-radius: 20px;" />
                </div>
            </div>

        </div>





    </div>

</div>